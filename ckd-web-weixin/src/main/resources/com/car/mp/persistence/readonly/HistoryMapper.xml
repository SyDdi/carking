<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.car.mp.persistence.readonly.HistoryMapper">

    <!-- 配置映射字段 -->
    <resultMap type="com.car.mp.domain.HistoryEntity" id="BaseResultMap">
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <!-- 获取搜索历史 -->
    <!--       from search_history where id in ( select max(id) from search_history WHERE open_id=#{openId} GROUP BY model_id )  order by createTime desc;-->
    <select id="getHistoryRecorders" parameterType="java.lang.String" resultMap="BaseResultMap">
    	select
            id,
            open_id as openId,
            create_time as createTime,
            ip,
            color_id as colorId,
            color_name as colorName,
            time_id as timeId,
            time_name as timeName,
            city_id as cityId,
            city_name as cityName,
            model_id as modelId,
            model_name as modelName,
            mile,
            purchase_price as purchasePrice,
            retail_price as retailPrice
           from search_history as A where open_id=#{openId} and  NOT EXISTS (SELECT 1 FROM search_history AS B where B.open_id=A.open_id and A.model_id=B.model_id and B.create_time > A.create_time) order by createTime desc;
    </select>

    <insert id="saveHistoryRecorder" parameterType="com.car.mp.domain.HistoryEntity">
        insert into search_history(
            id,
            open_id,
            create_time,
            ip,
            color_id,
            color_name,
            time_id,
            time_name,
            city_id,
            city_name,
            model_id,
            model_name,
            mile,
            purchase_price,
            retail_price
        ) values(
          NULL ,
          #{openId},
          NULL,
          #{ip},
          #{colorId},
          #{colorName},
          #{timeId},
          #{timeName},
          #{cityId},
          #{cityName},
          #{modelId},
          #{modelName},
          #{mile},
          #{purchasePrice},
          #{retailPrice}
          )
    </insert>
</mapper>
